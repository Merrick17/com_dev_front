{"ast":null,"code":"import axios from \"axios\";\nimport Swal from 'sweetalert2';\nexport const getAllUsers = () => async dispatch => {\n  let result = await axios.get(\"http://localhost:3000/users/allusers\");\n  let data = result.data.users;\n  return dispatch({\n    type: \"GET_ALL_USERS\",\n    data: data\n  });\n};\nexport const getUser = id => async dispatch => {\n  let token = localStorage.getItem(\"token\");\n  let result = await axios.get(`http://localhost:3000/users/${id}`, {\n    headers: {\n      \"x-access-token\": token\n    }\n  });\n  let data = result.data.users;\n  return dispatch({\n    type: \"GET_USER\",\n    data: data\n  });\n};\nexport const addANewUser = userData => async dispatch => {\n  console.log(userData);\n  let token = localStorage.getItem(\"token\");\n  dispatch({\n    type: \"ADD_USER\",\n    data: userData\n  });\n  let result = await axios.post(\"http://localhost:3000/users/add\", userData, {\n    headers: {\n      \"x-access-token\": token\n    }\n  });\n  getAllUsers();\n};\nexport const UpdateUser = (userData, id) => async dispatch => {\n  console.log(userData);\n  console.log(id);\n  let token = localStorage.getItem(\"token\");\n  dispatch({\n    type: \"UPDATE_USER\",\n    data: userData\n  });\n  let result = await axios.put(`http://localhost:3000/users/${id}`, userData, {\n    headers: {\n      \"x-access-token\": token\n    }\n  });\n  console.log(result);\n  getAllUsers();\n};\nexport const deleteUser = id => async dispatch => {\n  let token = localStorage.getItem(\"token\");\n  let result = await axios.delete(`http://localhost:3000/users/${id}`, {\n    headers: {\n      \"x-access-token\": token\n    }\n  });\n  console.log(result);\n  getAllUsers();\n};","map":{"version":3,"sources":["/home/safouene/Desktop/com-dev/src/layout/actions/users.js"],"names":["axios","Swal","getAllUsers","dispatch","result","get","data","users","type","getUser","id","token","localStorage","getItem","headers","addANewUser","userData","console","log","post","UpdateUser","put","deleteUser","delete"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,aAAjB;AACA,OAAO,MAAMC,WAAW,GAAG,MAAM,MAAOC,QAAP,IAAoB;AACnD,MAAIC,MAAM,GAAG,MAAMJ,KAAK,CAACK,GAAN,CAAU,sCAAV,CAAnB;AACA,MAAIC,IAAI,GAAGF,MAAM,CAACE,IAAP,CAAYC,KAAvB;AACA,SAAOJ,QAAQ,CAAC;AACdK,IAAAA,IAAI,EAAE,eADQ;AAEdF,IAAAA,IAAI,EAAEA;AAFQ,GAAD,CAAf;AAID,CAPM;AASP,OAAO,MAAMG,OAAO,GAAIC,EAAD,IAAQ,MAAOP,QAAP,IAAoB;AACjD,MAAIQ,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAZ;AACA,MAAIT,MAAM,GAAG,MAAMJ,KAAK,CAACK,GAAN,CAAW,+BAA8BK,EAAG,EAA5C,EACnB;AACEI,IAAAA,OAAO,EAAE;AACP,wBAAkBH;AADX;AADX,GADmB,CAAnB;AAMA,MAAIL,IAAI,GAAGF,MAAM,CAACE,IAAP,CAAYC,KAAvB;AACA,SAAOJ,QAAQ,CAAC;AACdK,IAAAA,IAAI,EAAE,UADQ;AAEdF,IAAAA,IAAI,EAAEA;AAFQ,GAAD,CAAf;AAID,CAbM;AAcP,OAAO,MAAMS,WAAW,GAAIC,QAAD,IAAc,MAAOb,QAAP,IAAoB;AAC3Dc,EAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACA,MAAIL,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAZ;AACAV,EAAAA,QAAQ,CAAC;AACPK,IAAAA,IAAI,EAAE,UADC;AAEPF,IAAAA,IAAI,EAAEU;AAFC,GAAD,CAAR;AAIA,MAAIZ,MAAM,GAAG,MAAMJ,KAAK,CAACmB,IAAN,CAAW,iCAAX,EAA8CH,QAA9C,EAAwD;AACzEF,IAAAA,OAAO,EAAE;AACP,wBAAkBH;AADX;AADgE,GAAxD,CAAnB;AAcAT,EAAAA,WAAW;AACZ,CAtBM;AAuBP,OAAO,MAAMkB,UAAU,GAAG,CAACJ,QAAD,EAAWN,EAAX,KAAkB,MAAOP,QAAP,IAAoB;AAC9Dc,EAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYR,EAAZ;AACA,MAAIC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAZ;AACAV,EAAAA,QAAQ,CAAC;AACPK,IAAAA,IAAI,EAAE,aADC;AAEPF,IAAAA,IAAI,EAAEU;AAFC,GAAD,CAAR;AAIA,MAAIZ,MAAM,GAAG,MAAMJ,KAAK,CAACqB,GAAN,CAAW,+BAA8BX,EAAG,EAA5C,EAA+CM,QAA/C,EAAyD;AAC1EF,IAAAA,OAAO,EAAE;AACP,wBAAkBH;AADX;AADiE,GAAzD,CAAnB;AAKAM,EAAAA,OAAO,CAACC,GAAR,CAAYd,MAAZ;AAEAF,EAAAA,WAAW;AACZ,CAhBM;AAkBP,OAAO,MAAMoB,UAAU,GAAIZ,EAAD,IAAQ,MAAOP,QAAP,IAAoB;AACpD,MAAIQ,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAZ;AACA,MAAIT,MAAM,GAAG,MAAMJ,KAAK,CAACuB,MAAN,CAChB,+BAA8Bb,EAAG,EADjB,EAEjB;AACEI,IAAAA,OAAO,EAAE;AACP,wBAAkBH;AADX;AADX,GAFiB,CAAnB;AAQAM,EAAAA,OAAO,CAACC,GAAR,CAAYd,MAAZ;AAEAF,EAAAA,WAAW;AACZ,CAbM","sourcesContent":["import axios from \"axios\";\r\nimport Swal from 'sweetalert2'\r\nexport const getAllUsers = () => async (dispatch) => {\r\n  let result = await axios.get(\"http://localhost:3000/users/allusers\");\r\n  let data = result.data.users;\r\n  return dispatch({\r\n    type: \"GET_ALL_USERS\",\r\n    data: data,\r\n  });\r\n};\r\n\r\nexport const getUser = (id) => async (dispatch) => {\r\n  let token = localStorage.getItem(\"token\");\r\n  let result = await axios.get(`http://localhost:3000/users/${id}`,\r\n  {\r\n    headers: {\r\n      \"x-access-token\": token,\r\n    },\r\n  });\r\n  let data = result.data.users;\r\n  return dispatch({\r\n    type: \"GET_USER\",\r\n    data: data,\r\n  });\r\n};\r\nexport const addANewUser = (userData) => async (dispatch) => {\r\n  console.log(userData);\r\n  let token = localStorage.getItem(\"token\");\r\n  dispatch({\r\n    type: \"ADD_USER\",\r\n    data: userData,\r\n  });\r\n  let result = await axios.post(\"http://localhost:3000/users/add\", userData, {\r\n    headers: {\r\n      \"x-access-token\": token,\r\n      \r\n    },\r\n\r\n\r\n\r\n\r\n    \r\n  } );\r\n  \r\n \r\n\r\n  getAllUsers();\r\n};\r\nexport const UpdateUser = (userData, id) => async (dispatch) => {\r\n  console.log(userData);\r\n  console.log(id);\r\n  let token = localStorage.getItem(\"token\");\r\n  dispatch({\r\n    type: \"UPDATE_USER\",\r\n    data: userData,\r\n  });\r\n  let result = await axios.put(`http://localhost:3000/users/${id}`, userData, {\r\n    headers: {\r\n      \"x-access-token\": token,\r\n    },\r\n  });\r\n  console.log(result);\r\n\r\n  getAllUsers();\r\n};\r\n\r\nexport const deleteUser = (id) => async (dispatch) => {\r\n  let token = localStorage.getItem(\"token\");\r\n  let result = await axios.delete(\r\n    `http://localhost:3000/users/${id}`,\r\n    {\r\n      headers: {\r\n        \"x-access-token\": token,\r\n      },\r\n    }\r\n  );\r\n  console.log(result);\r\n\r\n  getAllUsers();\r\n};\r\n"]},"metadata":{},"sourceType":"module"}