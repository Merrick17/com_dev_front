{"ast":null,"code":"import axios from \"axios\";\nimport { getAllUsers, getUser } from '../actions/users';\nimport Swal from 'sweetalert2';\nexport const authUser = (email, password, history) => async dispatch => {\n  // dispatch permet d'executer la fonction de modification selectioner par \n  try {\n    // le type en reducer approprié \n    let response = await axios.post(\"http://localhost:3000/users/login\", {\n      email: email,\n      password: password\n    });\n    let data = response.data;\n    console.log(data);\n\n    if (data.auth == true) {\n      //vérifier si l'utilisateur est connecte sur votre session actuelle\n      localStorage.setItem(\"token\", data.token);\n      let newData = {\n        //charger le data avec les attribut suivant\n        email: data.user.email,\n        data: data.user.id,\n        firstName: data.user.firstName,\n        name: data.user.name,\n        role: data.user.role._id,\n        auth: true\n      };\n      dispatch({\n        //dispatch ralencer les action \n        //auth_use est un clé qui permet de verifier si l'utilisateur est connectée ou pas et retourner leur data\n        type: \"AUTH_USER\",\n        data: newData\n      });\n      dispatch(getAllUsers()); //retiurner tous les utilisateur \n\n      if (data.user.role.role == \"admin\".toLowerCase()) {\n        //si l'utilisateur est un salarier ouvrir leur session\n        history.replace(\"/admin\");\n      } else {\n        history.replace(\"/Userprofile\"); /// page acceuil utilisateur simple \n      }\n    } else {\n      Swal.fire({\n        //est une message flash cad controlle de siasiir\n        title: 'Error!',\n        text: 'Email ou mot de passe incorret',\n        icon: 'error',\n        confirmButtonText: 'Ok'\n      });\n      dispatch({\n        type: \"AUTH_USER\",\n        data: {\n          id: \"\",\n          email: \"\",\n          firstName: \"\",\n          name: \"\",\n          role: \"\",\n          phone: 0,\n          auth: false\n        }\n      });\n    } //history.push(\"/admin\");\n\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const logoutUser = () => {\n  //sortie lors 'application\n  localStorage.clear();\n  return {\n    type: \"LOGOUT_USER\",\n    data: {\n      email: \"\",\n      firstName: \"\",\n      name: \"\",\n      role: \"\",\n      auth: false\n    }\n  };\n};","map":{"version":3,"sources":["/home/safouene/Desktop/com-dev/src/layout/actions/auth.js"],"names":["axios","getAllUsers","getUser","Swal","authUser","email","password","history","dispatch","response","post","data","console","log","auth","localStorage","setItem","token","newData","user","id","firstName","name","role","_id","type","toLowerCase","replace","fire","title","text","icon","confirmButtonText","phone","error","logoutUser","clear"],"mappings":"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","sourcesContent":["import axios from \"axios\";\r\nimport {getAllUsers,getUser} from '../actions/users'; \r\nimport Swal from 'sweetalert2'\r\nexport const authUser = (email, password, history) => async (dispatch) => { // dispatch permet d'executer la fonction de modification selectioner par \r\n  try {                                                                     // le type en reducer approprié \r\n    let response = await axios.post(\"http://localhost:3000/users/login\", {\r\n      email: email,\r\n      password: password,\r\n    });\r\n    let data = response.data;\r\n    console.log(data);\r\n    if (data.auth == true) {//vérifier si l'utilisateur est connecte sur votre session actuelle\r\n      localStorage.setItem(\"token\", data.token);\r\n      let newData = {//charger le data avec les attribut suivant\r\n        email: data.user.email,\r\n        data :data.user.id,\r\n        firstName: data.user.firstName,\r\n        name: data.user.name,\r\n        role:data.user.role._id,\r\n        \r\n        auth: true,\r\n      };\r\n      dispatch({//dispatch ralencer les action \r\n        //auth_use est un clé qui permet de verifier si l'utilisateur est connectée ou pas et retourner leur data\r\n        type: \"AUTH_USER\",\r\n        data: newData,\r\n      });\r\n      dispatch(getAllUsers()); //retiurner tous les utilisateur \r\n      if (data.user.role.role == (\"admin\").toLowerCase())\r\n      {//si l'utilisateur est un salarier ouvrir leur session\r\n      \r\n      history.replace(\"/admin\");\r\n      \r\n      }else\r\n      {\r\n        history.replace(\"/Userprofile\");\r\n       \r\n         /// page acceuil utilisateur simple \r\n      }\r\n     \r\n    } else {\r\n      Swal.fire({//est une message flash cad controlle de siasiir\r\n        title: 'Error!',\r\n        text: 'Email ou mot de passe incorret',\r\n        icon: 'error',\r\n        confirmButtonText: 'Ok'\r\n      })\r\n      dispatch({\r\n        type: \"AUTH_USER\",\r\n        data: {\r\n          id:\"\",\r\n          email: \"\",\r\n          firstName: \"\",\r\n          name: \"\",\r\n          role:\"\",\r\n        \r\n          phone: 0,\r\n          auth: false,\r\n        },\r\n      });\r\n    }\r\n    //history.push(\"/admin\");\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const logoutUser = () => {//sortie lors 'application\r\n  localStorage.clear();\r\n  return {\r\n    type: \"LOGOUT_USER\",\r\n    data: {\r\n      email: \"\",\r\n      firstName: \"\",\r\n      name: \"\",\r\n      role:\"\",\r\n      auth: false,\r\n    },\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}